@page
@model IndexModel

<aside>
    <vc:user-nav />
</aside>

<article>
    <div>
    <a href="/add">Add</a> |
    @if (Model.View == "calendar") {
    <a href="/?view=list&tag=@Model.Tag&link=@Model.Link&find=@Model.Find">View as a list</a>
    } else {
    <a href="/?view=calendar&tag=@Model.Tag&link=@Model.Link&find=@Model.Find">View in a calendar</a>
    }
    </div>

    @if (Model.View == "calendar") {
    // TODO: show the number of entries prior to, and after, the current month
    <button id="cal-prev-year" title="Previous year">&nbsp;&laquo;&nbsp;</button>
    <button id="cal-prev-month" title="Previous month">&nbsp;&nbsp;&lsaquo;&nbsp;&nbsp;</button>
    <button id="cal-today">Today</button>
    <button id="cal-next-month" title="Next month">&nbsp;&nbsp;&rsaquo;&nbsp;&nbsp;</button>
    <button id="cal-next-year" title="Next year">&nbsp;&raquo;&nbsp;</button>
    <div id="cal-date"></div>
    <div id="calendar"></div>
    } else {
        string noEntriesMessage;
        if (!string.IsNullOrEmpty(Model.Tag))
            noEntriesMessage = "No entries with tag " + Model.Tag;
        else if (!string.IsNullOrEmpty(Model.Find))
            noEntriesMessage = "No entries containing " + Model.Find;
        else
            noEntriesMessage = "There are no entries";
        <vc:record-entry-list record-entries="@Model.RecordEntries" no-entries-message="@noEntriesMessage" />
    }
</article>

@if (Model.View == "calendar") {
Model.ViewData[nameof(Model.RecordEntries)] = Model.RecordEntries.ToList();
<dialog id="srb-event-details-dialog">
    <div id="srb-event-details"></div>
    <button id="srb-event-details-dialog-close">Close</button>
</dialog>

@foreach (var recordEntry in (Model.ViewData[nameof(Model.RecordEntries)] as IEnumerable<Models.RecordEntry> ?? [])) {
<template data-type="record-entry" data-id="@recordEntry.RecordEntryId">
    <div><a href="/record/@recordEntry.RecordEntryId">@recordEntry.EntryDate.ToString("dddd dd MMMM yyyy")</a></div>
    <div>@recordEntry.Title</div>
    <div>@recordEntry.Description</div>
    <div class="srb-tag">
        @foreach (var tag in recordEntry.ActiveRecordEntryTags) {
        <a href="/?tag=@tag.Tag">@tag.Tag</a>
        }
    </div>
    <div class="@recordEntry.ListItemCss()">
        @if (recordEntry.ReminderDate != null) {
        <span class="srb-reminder">Reminder set for @recordEntry.ReminderDate.Value.ToString("dddd dd MMMM yyyy")</span>
        }
    </div>
</template>
}
}

@section Scripts {
@if (Model.View == "calendar") {
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js" integrity="sha256-ZztCtsADLKbUFK/X6nOYnJr0eelmV2X3dhLDB/JK6fM=" crossorigin="anonymous"></script>
<script type="text/javascript">
$(function() {
    $('#srb-event-details-dialog-close').click(function() {
        $('#srb-event-details-dialog')[0].close();
    });

    const firstOfMonth = new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), 1));
    const datesLoaded = new Set();

    var calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
        initialView: 'dayGridMonth',
        headerToolbar: false,
        eventClick: function(info) {
            var template = document.importNode($('template[data-type="record-entry"][data-id='+info.event.id+']')[0].content, true);;
            var dialogDetails = $('#srb-event-details');
            dialogDetails.empty();
            dialogDetails.append(template);
            $('#srb-event-details-dialog')[0].showModal();
        },
        eventContent: function(event) {
            return { html: '<span class="srb-event-title">' + event.event.title + '</span>' };
        }
    });
    calendar.render();
    function onDateChange() {
        $('#cal-date').text(calendar.getDate().toLocaleDateString(undefined, { year: 'numeric', month: 'long' }));
        const calendarMonth = new Date(Date.UTC(calendar.getDate().getFullYear(), calendar.getDate().getMonth(), 1));
        if (datesLoaded.has(calendarMonth.getTime())) {
            console.log('calendar events already loaded for date ' + calendarMonth + ', nothing to do');
        } else {
            console.log('calendar events not loaded for date ' + calendarMonth + ', loading...');
            $.getJSON('/api/calendar/recordentries?date='+encodeURIComponent(calendarMonth.toISOString()))
                .done(function(data) {
                    console.log('calendar record entries retrieved...adding to calendar');
                    data.forEach(function(re) {
                        if (!calendar.getEventById(re.recordEntryId))
                            calendar.addEvent({ id: re.recordEntryId, title: re.title, start: re.entryDate, allDay: true });
                        else
                            console.log('event ' + re.recordEntryId + ' already in calendar, not adding again');
                    });
                    // TODO create template? or perhaps this could/should be done on the fly?
                    datesLoaded.add(calendarMonth.getTime());
                })
                .fail(function() {
                    // TODO: should do something here!
                    console.log('failed getting record entries');
                });
        }
    }

    onDateChange();
    $('#cal-today').click(function() { calendar.today(); onDateChange(); });
    $('#cal-prev-year').click(function() { calendar.prevYear(); onDateChange(); });
    $('#cal-prev-month').click(function() { calendar.prev(); onDateChange(); });
    $('#cal-next-year').click(function() { calendar.nextYear(); onDateChange(); });
    $('#cal-next-month').click(function() { calendar.next(); onDateChange(); });
});
</script>
}
}
