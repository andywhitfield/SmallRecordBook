@page
@model IndexModel

<aside>
    <vc:user-nav />
</aside>

<article>
    <div>
    <a href="/add">Add</a> |
    @if (Model.View == "calendar") {
    <a href="/?view=list&tag=@Model.Tag&link=@Model.Link&find=@Model.Find">View as a list</a>
    } else {
    <a href="/?view=calendar&tag=@Model.Tag&link=@Model.Link&find=@Model.Find">View in a calendar</a>
    }
    </div>

    @if (Model.View == "calendar") {
    <button id="cal-prev-year" title="Previous year">&nbsp;&laquo;&nbsp;</button>
    <button id="cal-prev-month" title="Previous month">&nbsp;&nbsp;&lsaquo;&nbsp;&nbsp;</button>
    <span id="cal-count-prev" class="srb-cal-count srb-cal-count-prev" title="Number of events earlier than this month">(0)</span>
    <button id="cal-today" title="Go to the current month">Today</button>
    <span id="cal-count-next" class="srb-cal-count srb-cal-count-next" title="Number of events later than this month">(0)</span>
    <button id="cal-next-month" title="Next month">&nbsp;&nbsp;&rsaquo;&nbsp;&nbsp;</button>
    <button id="cal-next-year" title="Next year">&nbsp;&raquo;&nbsp;</button>
    <div id="cal-date"></div>
    <div id="calendar"></div>
    } else {
        string noEntriesMessage;
        if (!string.IsNullOrEmpty(Model.Tag))
            noEntriesMessage = "No entries with tag " + Model.Tag;
        else if (!string.IsNullOrEmpty(Model.Find))
            noEntriesMessage = "No entries containing " + Model.Find;
        else
            noEntriesMessage = "There are no entries";
        <vc:record-entry-list record-entries="@Model.RecordEntries" no-entries-message="@noEntriesMessage" />
    }
</article>

@if (Model.View == "calendar") {
<dialog id="srb-event-details-dialog">
    <div id="srb-event-details"></div>
    <button id="srb-event-details-dialog-close">Close</button>
</dialog>

<template id="srb-event-template">
    <div><a href="#" data-id="date">entry date</a></div>
    <div data-id="title">title</div>
    <div data-id="description">description</div>
    <div data-id="tags" class="srb-tag"></div>
    <div data-id="itemcss"><span class="srb-reminder"></span></div>
</template>
}

@section Scripts {
@if (Model.View == "calendar") {
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js" integrity="sha256-ZztCtsADLKbUFK/X6nOYnJr0eelmV2X3dhLDB/JK6fM=" crossorigin="anonymous"></script>
<script type="text/javascript">
$(function() {
    $('#srb-event-details-dialog-close').click(function() {
        $('#srb-event-details-dialog')[0].close();
    });

    const firstOfMonth = new Date(Date.UTC(new Date().getFullYear(), new Date().getMonth(), 1));
    const datesLoaded = new Set();

    var calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
        initialView: 'dayGridMonth',
        headerToolbar: false,
        eventClick: function(info) {
            var templateContent = $('#srb-event-template').clone();
            templateContent.prop('id', self.crypto.randomUUID());
            var template = document.importNode(templateContent[0].content, true);
            var templateJQ = $(template);
            $('[data-id="date"]', templateJQ).text(info.event.extendedProps.record.entryDateDesc);
            $('[data-id="date"]', templateJQ).prop('href', '/record/'+info.event.extendedProps.record.recordEntryId);
            $('[data-id="title"]', templateJQ).text(info.event.extendedProps.record.title);
            $('[data-id="description"]', templateJQ).text(info.event.extendedProps.record.description);
            for (const tag of info.event.extendedProps.record.tags) {
                $('[data-id="tags"]', templateJQ).append($('<a href="/?tag='+encodeURIComponent(tag)+'">'+tag+'</a>')).append(' ');
            }
            if (info.event.extendedProps.record.itemCss)
                $('[data-id="itemcss"]', templateJQ).addClass(info.event.extendedProps.record.itemCss);
            if (info.event.extendedProps.record.reminderDateDesc)
                $('[data-id="itemcss"] > span', templateJQ).text('Reminder set for '+info.event.extendedProps.record.reminderDateDesc);
            var dialogDetails = $('#srb-event-details');
            dialogDetails.empty();
            dialogDetails.append(template);
            $('#srb-event-details-dialog')[0].showModal();
        },
        eventContent: function(event) {
            return { html: '<span class="srb-event-title">' + event.event.title + '</span>' };
        }
    });
    calendar.render();
    function onDateChange() {
        $('#cal-date').text(calendar.getDate().toLocaleDateString(undefined, { year: 'numeric', month: 'long' }));
        const calendarMonth = new Date(Date.UTC(calendar.getDate().getFullYear(), calendar.getDate().getMonth(), 1));
        if (datesLoaded.has(calendarMonth.getTime())) {
            console.log('calendar events already loaded for date ' + calendarMonth + ', no need to load events');
        } else {
            console.log('calendar events not loaded for date ' + calendarMonth + ', loading...');
            $.getJSON('/api/calendar/recordentries?tag=@Model.Tag&link=@Model.Link&find=@Model.Find&date='+encodeURIComponent(calendarMonth.toISOString()))
                .done(function(data) {
                    console.log('calendar record entries retrieved...adding to calendar');
                    data.forEach(function(re) {
                        if (!calendar.getEventById(re.recordEntryId))
                            calendar.addEvent({ id: re.recordEntryId, title: re.title, start: re.entryDate, allDay: true, extendedProps: { record: re } });
                        else
                            console.log('event ' + re.recordEntryId + ' already in calendar, not adding again');
                    });
                    datesLoaded.add(calendarMonth.getTime());
                })
                .fail(function() {
                    // TODO: should do something here!
                    console.log('failed getting record entries');
                });
        }
        console.log('loading event counts...');
        $.getJSON('/api/calendar/recordentrycounts?tag=@Model.Tag&link=@Model.Link&find=@Model.Find&date='+encodeURIComponent(calendarMonth.toISOString()))
            .done(function(data) {
                console.log('event counts loaded');
                $('#cal-count-prev').text('('+data.eventCountBeforeCurrentMonth+')');
                $('#cal-count-next').text('('+data.eventCountAfterCurrentMonth+')');
            })
            .fail(function() {
                console.log('failed getting event counts, resetting to zero');
                $('#cal-count-prev').text('(0)');
                $('#cal-count-next').text('(0)');
            });
    }

    onDateChange();
    $('#cal-today').click(function() { calendar.today(); onDateChange(); });
    $('#cal-prev-year').click(function() { calendar.prevYear(); onDateChange(); });
    $('#cal-prev-month').click(function() { calendar.prev(); onDateChange(); });
    $('#cal-next-year').click(function() { calendar.nextYear(); onDateChange(); });
    $('#cal-next-month').click(function() { calendar.next(); onDateChange(); });
});
</script>
}
}
